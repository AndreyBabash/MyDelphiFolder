unit Main;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,
  FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs, FMX.StdCtrls,
  {$IFDEF ANDROID}
  	AndroidApi.Helpers, FMX.Platform.Android, Androidapi.JNI.Widget, FMX.Helpers.Android,
 	{$ENDIF}
  FMX.Controls.Presentation, FMX.Colors, FMX.Gestures, FMX.Objects, FMX.Layouts;

const PI = 3.14;

type
  TForm1 = class(TForm)
    ToolBar1: TToolBar;
    Label1: TLabel;
    ColorPicker1: TColorPicker;
    Label2: TLabel;
    GestureManager1: TGestureManager;
    Rectangle1: TRectangle;
    RadioButton1: TRadioButton;
    Label3: TLabel;
    RadioButton2: TRadioButton;
    RadioButton3: TRadioButton;
    Button2: TButton;
    PaintBox1: TPaintBox;
    ToolBar2: TToolBar;
    Label4: TLabel;
    Label5: TLabel;
    Switch1: TSwitch;
    Layout1: TLayout;
    procedure FormKeyDown(Sender: TObject; var Key: Word; var KeyChar: Char;
      Shift: TShiftState);
    procedure FormKeyUp(Sender: TObject; var Key: Word; var KeyChar: Char;
      Shift: TShiftState);
    procedure FormCreate(Sender: TObject);
    procedure FormGesture(Sender: TObject; const EventInfo: TGestureEventInfo;
      var Handled: Boolean);
    procedure Button2Click(Sender: TObject);
    procedure PaintBox1Paint(Sender: TObject; Canvas: TCanvas);
    procedure Switch1Switch(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
    color:TAlphaColor;
    linetype:TStrokeDash;
    thickness:Integer;
  end;

var
  Form1: TForm1;


implementation

{$R *.fmx}


// Подтверждение выхода из приложения

procedure ExitConfirm;
begin

// Вывод диалогового окна

    MessageDlg('Хотите выйти!', System.UITypes.TMsgDlgType.mtInformation,
    [
      System.UITypes.TMsgDlgBtn.mbYes,
      System.UITypes.TMsgDlgBtn.mbNo
    ], 0,

      procedure(const AResult: TModalResult)
      begin
        case AResult
          of

          mrYES:

          begin
          {$IFDEF ANDROID}
            MainActivity.finish;    // Выход из приложения
          {$ENDIF}
        	{$IFDEF MSWINDOWS}
          	Application.Terminate;    // Выход из приложения
          {$ENDIF}
          end;

          mrNo:

            begin

            end;

        end;
      end
    )

end;

// Изменение толщины линии

procedure ThicknessInc(var l:Tlabel);
begin
  with Form1 do
  begin
      thickness:=thickness+1;
    if thickness>10 then thickness:=10;
    l.Text:='Толщина линии: '+inttostr(thickness);
  end;
end;


procedure ThicknessDec(var l:Tlabel);
begin
with Form1 do
  begin
  thickness:=thickness-1;
  if thickness<1 then thickness:=1;
  l.Text:='Толщина линии: '+inttostr(thickness);
  end;
end;


// Выбор типа линии
procedure TForm1.Button2Click(Sender: TObject);
begin
  if radiobutton1.IsChecked then linetype:=TStrokeDash.Solid;
  if radiobutton2.IsChecked then linetype:=TStrokeDash.Dot;
  if radiobutton3.IsChecked then linetype:=TStrokeDash.Dash;

  color:=ColorPicker1.Color;

  Layout1.Visible:=false;
  PaintBox1.Repaint;
end;

procedure TForm1.FormCreate(Sender: TObject);
begin
  thickness:=1;
  Label2.Text:='Толщина линии: '+inttostr(thickness);
  color:=TAlphaColors.Aqua;
  linetype:=TStrokeDash.Solid;
end;

procedure TForm1.FormGesture(Sender: TObject;
  const EventInfo: TGestureEventInfo; var Handled: Boolean);
begin

// Определяем доступный жест и обрабатываем его

case EventInfo.GestureID of
// Движение влево (увеличиваем толщину линии выводимой графики)
  sgiLeft:

    begin
      ThicknessInc(Label2);
      PaintBox1.Repaint;
    end;
// Движение вправо (уменьшаем толщину линии выводимой графики)
  sgiRight:

    begin
      ThicknessDec(Label2);
      PaintBox1.Repaint;
    end;

// При прорисовке круга
// Показываем интерфейс настройки типа линии и ее цвета

  sgiCircle:

    begin
    // показываем настройки
      Layout1.Visible:=true;
    // перерисовываем PaintBox (он служит для вывода графики)
      PaintBox1.Repaint;
    end;

end;


end;

// Нажатие клавиши
procedure TForm1.FormKeyDown(Sender: TObject; var Key: Word; var KeyChar: Char;
  Shift: TShiftState);
begin
{$IFDEF ANDROID}
//*************************************************//
 if Key = vkVolumeUp then
 begin
         Key:=0;
         color:=TAlphaColors.Red;
         PaintBox1.Repaint;
 end;
//**************************************************//

//*************************************************//
 if Key = vkVolumeDown then
 begin
         Key:=0;
         color:=TAlphaColors.Blue;
         PaintBox1.Repaint;
 end;
//**************************************************//

//*************************************************//
 if Key = vkHardwareBack then
 begin
         Key:=0;
         ExitConfirm;
 end;
//**************************************************//
{$ENDIF}
{$IFDEF MSWINDOWS}
//*************************************************//
 if Key = vkUp then
 begin
         Key:=0;
         color:=TAlphaColors.Green;
         PaintBox1.Repaint;
 end;
//**************************************************//

if Key = vkInsert then
begin
  // показываем настройки
      Layout1.Visible:=true;
    // перерисовываем PaintBox (он служит для вывода графики)
      PaintBox1.Repaint;
end;

//*************************************************//
 if Key = vkDown then
 begin
         Key:=0;
         color:=TAlphaColors.Yellow;
         PaintBox1.Repaint;
 end;
//**************************************************//

//*************************************************//
 if Key = vkEscape then
 begin
         Key:=0;
         ExitConfirm;
 end;
//**************************************************//

//*************************************************//
 if Key = vkRight then
 begin
      ThicknessDec(Label2);
      PaintBox1.Repaint;
 end;
//**************************************************//

//*************************************************//
 if Key = vkLeft then
 begin
      ThicknessInc(Label2);
      PaintBox1.Repaint;
 end;
//**************************************************//

//*************************************************//
 if Key = vkInsert then
 begin
 			// показываем настройки
      Layout1.Visible:=true;
    	// перерисовываем PaintBox (он служит для вывода графики)
      PaintBox1.Repaint;
 end;
//**************************************************//

 {$ENDIF}
end;

// Отпускание клавиши
procedure TForm1.FormKeyUp(Sender: TObject; var Key: Word; var KeyChar: Char;
  Shift: TShiftState);
begin
{$IFDEF ANDROID}
//*************************************************//
 if Key = vkVolumeUp then
 begin
  Key:=0;
 end;
//**************************************************//

//*************************************************//
 if Key = vkVolumeDown then
 begin
  Key:=0;
 end;
//**************************************************//

//*************************************************//
 if Key = vkHardwareBack then
 begin
  Key:=0;
 end;
//**************************************************//
{$ENDIF}
{$IFDEF MSWINDOWS}
//*************************************************//
 if Key = vkUp then
 begin
  Key:=0;
 end;
//**************************************************//

//*************************************************//
 if Key = vkDown then
 begin
  Key:=0;
 end;
//**************************************************//

//*************************************************//
 if Key = vkEscape then
 begin
  Key:=0;
 end;
//**************************************************//
//*************************************************//
 if Key = vkRight then
 begin
  Key:=0;
 end;
//**************************************************//

//*************************************************//
 if Key = vkLeft then
 begin
  Key:=0;
 end;
//**************************************************//
//*************************************************//
 if Key = vkInsert then
 begin
  Key:=0;
 end;
//**************************************************//
 {$ENDIF}
end;

procedure TForm1.PaintBox1Paint(Sender: TObject; Canvas: TCanvas);
  var p1,p2:tpoint;       // точки р1 и р2
begin

// Цвет формы

  PaintBox1.Canvas.Stroke.Color:=color;

// Выбор типа линии

  PaintBox1.Canvas.Stroke.Dash:=linetype;      // Сполшная

  //  Толщина линии
  PaintBox1.Canvas.Stroke.Thickness:=thickness;

  // Рисовать графику следует между блоками BeginScene и EndScene

  PaintBox1.Canvas.BeginScene;

// Первая линия

  p1.X:=0;
  p1.Y:=0;

  p2.X:=Round(PaintBox1.Width);
  p2.Y:=Round(PaintBox1.Height);

  PaintBox1.Canvas.DrawLine(p1,p2,1.0);

  PaintBox1.Canvas.Font.Size:=20;
  PaintBox1.Canvas.Font.Style:=[TFontStyle.fsBold];
  PaintBox1.Canvas.Fill.Color:=TAlphaColors.Red;
  PaintBox1.Canvas.FillText(TRectF.Create(0, 0, 200, 200),'Hello!!!',true,1,[],TTextAlign.Center,TTextAlign.Center);

  //PaintBox1.Canvas.FillText(TRectF.Create(10, 10, 200, 200),'Hello!!!',false,1.0,[],TTextAlign.Center,TTextAlign.Center);
  //PaintBox1.Canvas.DrawRect(TRectF.Create(10, 10, PaintBox1.Width-10, PaintBox1.Height-10), 20, 20, [TCorner.TopLeft,TCorner.TopRight,TCorner.BottomLeft,TCorner.BottomRight], 1); //виведення прямокутника

// Вторая линия

  p1.X:=Round(PaintBox1.Width);
  p1.Y:=0;

  p2.X:=0;
  p2.Y:=Round(PaintBox1.Height);

  PaintBox1.Canvas.DrawLine(p1,p2,1.0);

  PaintBox1.Canvas.EndScene;

end;

// Подтверждение віхода из приложения при переключении Switch
procedure TForm1.Switch1Switch(Sender: TObject);
begin
if Switch1.IsChecked then
    begin
      ExitConfirm;
      switch1.IsChecked:=false;
    end;
end;

end.
